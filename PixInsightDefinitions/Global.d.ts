/* declare function Number(value: any): number; */
/* declare function Object(value: any): Object; */
declare function cerr(text: string): void;
declare function cflush(): void;
declare function cout(text: string): void;
declare function decodeURI(encodedURI: string): string;
declare function decodeURIComponent(encodedURI: string): string;
declare function encodeURI(URI: string): string;
declare function encodeURIComponent(uriComp: string): string;
declare function eval(s: string): Object;
declare function eval(s: string, object: object): Object;
declare function format(fmt: string): string;
declare function format(...value: any[]): string;
declare function gc(): void;
declare function gc(hardGC: boolean /* true*/): void;
declare function gcBytes(): number;
declare function getEnvironmentVariable(varName: string): string;
declare function isFinite(n: number): boolean;
declare function isNaN(value: any): boolean;
declare function loadResource(filePath: string): boolean;
declare function loadResource(filePath: string, rootPath: string): boolean;
declare function matchesWildSpecification(what: string, wildPattern: string): boolean;
declare function msleep(milliseconds: number): void;
declare function parseFloat(s: string): number;
declare function parseInt(s: string): number;
declare function parseInt(s: string, radix: number): number;
declare function processEvents(): void;
declare function processEvents(excludeUserInputEvents: boolean /* false*/): void;
declare function processEvents(excludeUserInputEvents: boolean /* false*/, iterations: number /* 1*/): void;
declare function replaceEnvironmentVariables(s: string): string;
declare function searchDirectory(dirPath: string): Array<any>;
declare function searchDirectory(dirPath: string, recursive: boolean /* false*/): Array<any>;
declare function sleep(seconds: number): void;
declare function systemOffsetFromUTC(): number;
declare function systemOffsetFromUTC(date: Date | string): number;
declare function unloadResource(filePath: string): boolean;
declare function unloadResource(filePath: string, rootPath: string): boolean;